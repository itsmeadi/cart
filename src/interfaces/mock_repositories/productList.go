// Code generated by MockGen. DO NOT EDIT.
// Source: src/domain/repositories/productList.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	models "github.com/itsmeadi/cart/src/entities/models"
	reflect "reflect"
)

// MockProductResponseList is a mock of ProductResponseList interface
type MockProductResponseList struct {
	ctrl     *gomock.Controller
	recorder *MockProductResponseListMockRecorder
}

// MockProductResponseListMockRecorder is the mock recorder for MockProductResponseList
type MockProductResponseListMockRecorder struct {
	mock *MockProductResponseList
}

// NewMockProductResponseList creates a new mock instance
func NewMockProductResponseList(ctrl *gomock.Controller) *MockProductResponseList {
	mock := &MockProductResponseList{ctrl: ctrl}
	mock.recorder = &MockProductResponseListMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProductResponseList) EXPECT() *MockProductResponseListMockRecorder {
	return m.recorder
}

// GetProductListByCategoryId mocks base method
func (m *MockProductResponseList) GetProductListByCategoryId(ctx context.Context, categoryId int64) (models.ProductListResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProductListByCategoryId", ctx, categoryId)
	ret0, _ := ret[0].(models.ProductListResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProductListByCategoryId indicates an expected call of GetProductListByCategoryId
func (mr *MockProductResponseListMockRecorder) GetProductListByCategoryId(ctx, categoryId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProductListByCategoryId", reflect.TypeOf((*MockProductResponseList)(nil).GetProductListByCategoryId), ctx, categoryId)
}

// GetProductArrByCategoryId mocks base method
func (m *MockProductResponseList) GetProductArrByCategoryId(ctx context.Context, id int64) ([]models.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProductArrByCategoryId", ctx, id)
	ret0, _ := ret[0].([]models.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProductArrByCategoryId indicates an expected call of GetProductArrByCategoryId
func (mr *MockProductResponseListMockRecorder) GetProductArrByCategoryId(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProductArrByCategoryId", reflect.TypeOf((*MockProductResponseList)(nil).GetProductArrByCategoryId), ctx, id)
}
