// Code generated by MockGen. DO NOT EDIT.
// Source: src/domain/repositories/product.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	models "github.com/itsmeadi/cart/src/entities/models"
	reflect "reflect"
)

// MockProduct is a mock of Product interface
type MockProduct struct {
	ctrl     *gomock.Controller
	recorder *MockProductMockRecorder
}

// MockProductMockRecorder is the mock recorder for MockProduct
type MockProductMockRecorder struct {
	mock *MockProduct
}

// NewMockProduct creates a new mock instance
func NewMockProduct(ctrl *gomock.Controller) *MockProduct {
	mock := &MockProduct{ctrl: ctrl}
	mock.recorder = &MockProductMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProduct) EXPECT() *MockProductMockRecorder {
	return m.recorder
}

// GetProductDetailById mocks base method
func (m *MockProduct) GetProductDetailById(ctx context.Context, id int64) (models.Product, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProductDetailById", ctx, id)
	ret0, _ := ret[0].(models.Product)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetProductDetailById indicates an expected call of GetProductDetailById
func (mr *MockProductMockRecorder) GetProductDetailById(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProductDetailById", reflect.TypeOf((*MockProduct)(nil).GetProductDetailById), ctx, id)
}
